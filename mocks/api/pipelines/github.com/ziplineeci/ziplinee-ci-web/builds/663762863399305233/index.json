{
  "id": "663762863399305233",
  "repoSource": "github.com",
  "repoOwner": "ziplineeci",
  "repoName": "ziplinee-ci-web",
  "repoBranch": "main",
  "repoRevision": "08240fffc4d39953ba130a29bb7e8d52ec5bd129",
  "buildVersion": "1.0.0-main-1108",
  "buildStatus": "succeeded",
  "labels": [
    {
      "key": "app-group",
      "value": "ziplinee-ci"
    },
    {
      "key": "language",
      "value": "nodejs"
    },
    {
      "key": "team",
      "value": "ziplinee-team"
    },
    {
      "key": "type",
      "value": "web"
    }
  ],
  "releaseTargets": [
    {
      "name": "tooling-ziplinee",
      "actions": [
        {
          "name": "deploy-simple"
        },
        {
          "name": "restart-simple",
          "hideBadge": true
        }
      ],
      "activeReleases": [
        {
          "name": "tooling-ziplinee",
          "action": "deploy-simple",
          "id": "664373422710980625",
          "repoSource": "github.com",
          "repoOwner": "ziplineeci",
          "repoName": "ziplinee-ci-web",
          "releaseVersion": "1.0.0-main-1112",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "fired": true,
              "manual": {
                "userID": "me@ziplineeci.io"
              }
            }
          ],
          "insertedAt": "2021-06-04T15:37:58.317229Z",
          "startedAt": "2021-06-04T15:38:00.29033Z",
          "updatedAt": "2021-06-04T15:39:04.394577Z",
          "duration": 64000000000,
          "pendingDuration": 1000000000,
          "extraInfo": {
            "medianPendingDuration": 1000000000,
            "medianDuration": 66000000000
          }
        },
        {
          "name": "tooling-ziplinee",
          "action": "restart-simple",
          "id": "566675166820335628",
          "repoSource": "github.com",
          "repoOwner": "ziplineeci",
          "repoName": "ziplinee-ci-web",
          "releaseVersion": "0.1.942",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@ziplineeci.io"
              }
            }
          ],
          "insertedAt": "2020-06-24T13:38:56.748965Z",
          "startedAt": "2020-06-24T13:38:58.970734Z",
          "updatedAt": "2020-06-24T13:40:09.560228Z",
          "duration": 70000000000,
          "pendingDuration": 2000000000
        }
      ]
    }
  ],
  "manifest": "builder:\n  track: dev\n  medium: memory\n\nlabels:\n  type: web\n  app-group: ziplinee-ci\n  team: ziplinee-team\n  language: nodejs\n\nversion:\n  semver:\n    major: 1\n    minor: 0\n    patch: 0\n    labelTemplate: '{{branch}}-{{auto}}'\n    releaseBranch: 1.0.0\n\nstages:\n  audit-and-restore:\n    parallelStages:\n      snyk:\n        image: extensions/snyk:dev\n        severity-threshold: medium\n\n      audit:\n        image: extensions/npm-audit:dev\n        action: audit\n        level: low\n        dev-level: critical\n        workspace: ziplinee\n        channels:\n        - '#npm-audit'\n\n      restore:\n        image: node:15-alpine\n        commands:\n        - npm ci\n\n  lint-and-build:\n    parallelStages:\n      lint:\n        image: node:15-alpine\n        commands:\n        - npm run lint\n\n      build:\n        image: node:15-alpine\n        commands:\n        - npm run build\n\n      lint-helm-chart:\n        image: extensions/helm:dev\n        action: lint\n\n      package-helm-chart:\n        image: extensions/helm:dev\n        action: package\n\n  bake:\n    image: extensions/docker:dev\n    action: build\n    severity: unknown\n    repositories:\n    - ziplinee\n    path: ./dist\n    copy:\n    - favicon.ico\n    - nginx.vh.default.conf\n    - docker-entrypoint.sh\n    - package-lock.json\n\n  test:\n    services:\n    - name: ci.ziplineeci.io\n      image: ziplineeci/ziplinee-ci-web:${ZIPLINEE_BUILD_VERSION}\n      readiness:\n        path: /robots.txt\n        port: 5000\n\n    image: node:15-alpine\n    commands:\n    - apk add curl\n    - curl --fail http://ci.ziplineeci.io:5000/manifest/encrypt\n\n  push-to-docker-hub:\n    image: extensions/docker:dev\n    retries: 5\n    action: push\n    repositories:\n    - ziplinee\n\n  test-helm-chart:\n    services:\n    - name: kubernetes\n      image: bsycorp/kind:latest-1.19\n      readiness:\n        path: /kubernetes-ready\n        port: 10080\n        timeoutSeconds: 120\n    image: extensions/helm:dev\n    action: test\n    values: |-\n      extraLabels:\n        team: ziplinee\n\n      extraSecrets:\n      - key: gcp\n        annotations: {}\n        mountPath: /gcp\n        data:\n          service-account-key.json: |\n            {}\n\n      extraConfigmaps:\n      - key: templates\n        annotations: {}\n        mountPath: /templates\n        data: |\n          manifest-docker.tmpl: |\n            labels:\n              container: {{.ContainerName}}\n              team: {{.TeamName}}\n              language: docker\n\n            stages:\n              bake:\n                image: extensions/docker:stable\n                action: build\n                repositories:\n                - ziplinee\n\n              push-to-docker-registry:\n                image: extensions/docker:stable\n                action: push\n                repositories:\n                - ziplinee\n\n  clone-charts-repo:\n    image: extensions/git-clone:dev\n    repo: helm-charts\n    branch: main\n\n  publish-helm-chart:\n    image: extensions/helm:dev\n    action: publish\n    repoBranch: main\n\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    workspace: ziplinee\n    channels:\n    - '#build-status'\n    when:\n      status == 'succeeded' ||\n      status == 'failed'\n\nreleases:\n  tooling-ziplinee:\n    actions:\n    - name: deploy-simple\n    - name: restart-simple\n      hideBadge: true\n    clone: true\n    stages:\n      deploy:\n        image: extensions/gke:dev\n        namespace: ziplinee-ci\n        strategytype: AtomicUpdate\n        visibility: iap\n        iapOauthClientID: ***\n        iapOauthClientSecret: ***\n        imagePullSecretUser: ***\n        imagePullSecretPassword: ***\n        container:\n          repository: ziplinee\n          cpu:\n            request: 12m\n          memory:\n            request: 125Mi\n            limit: 125Mi\n          liveness:\n            path: /robots.txt\n          readiness:\n            path: /robots.txt\n          metrics:\n            scrape: false\n        sidecars:\n        - type: openresty\n          cpu:\n            request: 12m\n          memory:\n            request: 125Mi\n            limit: 125Mi\n        vpa:\n          enabled: true\n          updateMode: \"Off\"\n        hosts:\n        - ***\n        - ***\n        chaosproof: true\n        manifests:\n          files:\n          - gke/ingress.yaml\n\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        workspace: ziplinee\n        channels:\n        - '#build-status'\n        when:\n          status == 'succeeded' ||\n          status == 'failed'",
  "manifestWithDefaults": "builder:\n  track: dev\n  os: linux\n  medium: memory\n  type: docker\nlabels:\n  app-group: ziplinee-ci\n  language: nodejs\n  team: ziplinee-team\n  type: web\nversion:\n  semver:\n    major: 1\n    minor: 0\n    patch: \"0\"\n    labelTemplate: '{{branch}}-{{auto}}'\n    releaseBranch: 1.0.0\nstages:\n  audit-and-restore:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: extensions/snyk:dev\n      shell: /bin/sh\n      workDir: /ziplinee-work\n      when: status == 'succeeded'\n      severity-threshold: medium\n    - image: extensions/npm-audit:dev\n      shell: /bin/sh\n      workDir: /ziplinee-work\n      when: status == 'succeeded'\n      action: audit\n      channels:\n      - '#npm-audit'\n      dev-level: critical\n      level: low\n      workspace: ziplinee\n    - image: node:15-alpine\n      shell: /bin/sh\n      workDir: /ziplinee-work\n      commands:\n      - npm ci\n      when: status == 'succeeded'\n  lint-and-build:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: node:15-alpine\n      shell: /bin/sh\n      workDir: /ziplinee-work\n      commands:\n      - npm run lint\n      when: status == 'succeeded'\n    - image: node:15-alpine\n      shell: /bin/sh\n      workDir: /ziplinee-work\n      commands:\n      - npm run build\n      when: status == 'succeeded'\n    - image: extensions/helm:dev\n      shell: /bin/sh\n      workDir: /ziplinee-work\n      when: status == 'succeeded'\n      action: lint\n    - image: extensions/helm:dev\n      shell: /bin/sh\n      workDir: /ziplinee-work\n      when: status == 'succeeded'\n      action: package\n  bake:\n    image: extensions/docker:dev\n    shell: /bin/sh\n    workDir: /ziplinee-work\n    when: status == 'succeeded'\n    action: build\n    copy:\n    - favicon.ico\n    - nginx.vh.default.conf\n    - docker-entrypoint.sh\n    - package-lock.json\n    path: ./dist\n    repositories:\n    - ziplinee\n    severity: unknown\n  test:\n    image: node:15-alpine\n    shell: /bin/sh\n    workDir: /ziplinee-work\n    commands:\n    - apk add curl\n    - curl --fail http://ci.ziplineeci.io:5000/manifest/encrypt\n    when: status == 'succeeded'\n    services:\n    - name: ci.ziplineeci.io\n      image: ziplineeci/ziplinee-ci-web:${ZIPLINEE_BUILD_VERSION}\n      shell: /bin/sh\n      multiStage: false\n      when: status == 'succeeded'\n      readiness:\n        path: /robots.txt\n        timeoutSeconds: 60\n        port: 5000\n        protocol: http\n        hostname: ci.ziplineeci.io\n  push-to-docker-hub:\n    image: extensions/docker:dev\n    shell: /bin/sh\n    workDir: /ziplinee-work\n    when: status == 'succeeded'\n    retries: 5\n    action: push\n    repositories:\n    - ziplinee\n  test-helm-chart:\n    image: extensions/helm:dev\n    shell: /bin/sh\n    workDir: /ziplinee-work\n    when: status == 'succeeded'\n    services:\n    - name: kubernetes\n      image: bsycorp/kind:latest-1.19\n      shell: /bin/sh\n      multiStage: false\n      when: status == 'succeeded'\n      readiness:\n        path: /kubernetes-ready\n        timeoutSeconds: 120\n        port: 10080\n        protocol: http\n        hostname: kubernetes\n    action: test\n    values: |-\n      extraLabels:\n        team: ziplinee\n\n      extraSecrets:\n      - key: gcp\n        annotations: {}\n        mountPath: /gcp\n        data:\n          service-account-key.json: |\n            {}\n\n      extraConfigmaps:\n      - key: templates\n        annotations: {}\n        mountPath: /templates\n        data: |\n          manifest-docker.tmpl: |\n            labels:\n              container: {{.ContainerName}}\n              team: {{.TeamName}}\n              language: docker\n\n            stages:\n              bake:\n                image: extensions/docker:stable\n                action: build\n                repositories:\n                - ziplinee\n\n              push-to-docker-registry:\n                image: extensions/docker:stable\n                action: push\n                repositories:\n                - ziplinee\n  clone-charts-repo:\n    image: extensions/git-clone:dev\n    shell: /bin/sh\n    workDir: /ziplinee-work\n    when: status == 'succeeded'\n    branch: main\n    repo: helm-charts\n  publish-helm-chart:\n    image: extensions/helm:dev\n    shell: /bin/sh\n    workDir: /ziplinee-work\n    when: status == 'succeeded'\n    action: publish\n    repoBranch: main\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    shell: /bin/sh\n    workDir: /ziplinee-work\n    when: status == 'succeeded' || status == 'failed'\n    channels:\n    - '#build-status'\n    workspace: ziplinee\nreleases:\n  tooling-ziplinee:\n    builder:\n      track: dev\n      os: linux\n      medium: memory\n      type: docker\n    clone: true\n    actions:\n    - name: deploy-simple\n    - name: restart-simple\n      hideBadge: true\n    stages:\n      deploy:\n        image: extensions/gke:dev\n        shell: /bin/sh\n        workDir: /ziplinee-work\n        when: status == 'succeeded'\n        chaosproof: true\n        container:\n          cpu:\n            request: 12m\n          liveness:\n            path: /robots.txt\n          memory:\n            limit: 125Mi\n            request: 125Mi\n          metrics:\n            scrape: false\n          readiness:\n            path: /robots.txt\n          repository: ziplinee\n        hosts:\n        - ***\n        - ***\n        iapOauthClientID: ***\n        iapOauthClientSecret: ***\n        imagePullSecretPassword: ***\n        imagePullSecretUser: ***\n        manifests:\n          files:\n          - gke/ingress.yaml\n        namespace: ziplinee-ci\n        sidecars:\n        - cpu:\n            request: 12m\n          memory:\n            limit: 125Mi\n            request: 125Mi\n          type: openresty\n        strategytype: AtomicUpdate\n        visibility: iap\n        vpa:\n          enabled: true\n          updateMode: \"Off\"\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        shell: /bin/sh\n        workDir: /ziplinee-work\n        when: status == 'succeeded' || status == 'failed'\n        channels:\n        - '#build-status'\n        workspace: ziplinee\n",
  "commits": [
    {
      "message": "update cancel button to work for bots",
      "author": {
        "email": "me@ziplineeci.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    }
  ],
  "triggerEvents": [
    {
      "fired": true,
      "git": {
        "event": "push",
        "repository": "github.com/ziplineeci/ziplinee-ci-web",
        "branch": "main"
      }
    }
  ],
  "insertedAt": "2021-06-02T11:52:30.402163Z",
  "startedAt": "2021-06-02T11:52:32.116031Z",
  "updatedAt": "2021-06-02T11:57:22.682714Z",
  "duration": 290000000000,
  "pendingDuration": 1000000000,
  "organizations": [
    {
      "name": "Ziplinee"
    }
  ]
}